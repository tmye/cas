{% extends 'base.html.twig' %}


{% block title %}C.A.S - Statistiques Département{% endblock %}

{% block body %}

<div class="container-fluid">
    <div class="wrapper">

        {% include('cas/partials/_sidebar.html.twig') %}

        <div class="card mx-0 float-none" >
            <!-- Modal for ajax loading -->
            <div id="modal_loading" class="modal ajax_modals">
                <div class="modal-content">
                    <p class="center">
                        <img src="{{ asset('img/ajax_loaders/ajax-loading.gif') }}">
                    </p>
                </div>
            </div>
        </div>



        <div class="content-page">
            <div class="content">

                <div class="col-lg-12">
                    <h2 class="page-title"><span class="uil-chart-bar"></span> Statistiques</h2>
                </div>

                <div class="row card">
                    <div class="col-lg-12 card-body">
                        <p class="description_message">Choisissez des départements, choisissez une durée de votre choix et analysez les statistiques de ces départements</p>
                        <div class="row">
                            <div class="col-lg-12">
                                <ul class="collapsible" data-collapsible="accordion">
                                    <li>
                                        <div class="collapsible-header collapsible-header-title active">Choisissez les paramètres</div>
                                        <div class="collapsible-body" style="padding-bottom: 0px">
                                            <div class="row">
                                                <form class="col-lg-12">
                                                    <div class="row">
                                                        <div class="row " id="errorContainer">
                                                            <div class="col-lg-12">
                                                                <span class="red-text"></span>
                                                            </div>
                                                        </div>
                                                        <div class="row mb-2">
                                                            <div class="col-lg-12">
                                                                <p>Veuillez sélectionner les départements</p>
                                                                <br>
                                                                {% for dep in listDep %}
                                                                    <span class="checkboxes" tag="{{ dep.id }}" id="depSpan{{ dep.id }}" style="padding-right: 20px">
                                                                        <input type="checkbox" id="checkbox{{ dep.id }}" />
                                                                        <label for="checkbox{{ dep.id }}">{{ dep.name }}</label>
                                                                    </span>
                                                                {% endfor %}
                                                                </span>
                                                            </div>
                                                        </div>


                                                        <div class="row" style="width: 100%" >
                                                            <h4>Du</h4>
                                                            <div class="col-lg-5">

                                                                <input type="date" id="fromDate" class="form-control datepicker input-customized" placeholder="DU">
                                                            </div>
                                                            <h4>Au</h4>
                                                            <div class="col-lg-5">
                                                                <input type="date" id="toDate" class="form-control datepicker input-customized" placeholder="AU">
                                                            </div>
                                                            <div class="col-sm-12 mt-sm-3">
                                                                <input type="button" id="submitButton" value="Valider" class="btn btn-success btn-perso-historique">
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="col-lg-6">
                                                                <span class="right" style="margin-top: 20px">

                                                                </span>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <br/>
                        <h5 style="display: none" class="center-align separationText"><u>Statistiques des pertes par département</u></h5>
                        <br/>

                        <div class="row">
                            <div class="col-lg-6 appendCanvas">
                                <canvas id="myChart"></canvas>
                            </div>
                            <div class="col-lg-6 appendCanvas2">
                                <canvas id="myChart2"></canvas>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 appendCanvas3">
                                <canvas id="myChart3"></canvas>
                            </div>
                            <div class="col-lg-6 appendCanvas4">
                                <canvas id="myChart4"></canvas>
                            </div>
                        </div>

                        <br/>
                        <h5 style="display: none" class="center-align separationText"><u>Statistiques des pertes en moyenne par département</u></h5>
                        <br/>

                        <div class="row">
                            <div class="col-lg-6 appendCanvasMoy">
                                <canvas id="myChartMoy"></canvas>
                            </div>
                            <div class="col-lg-6 appendCanvasMoy2">
                                <canvas id="myChartMoy2"></canvas>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 appendCanvasMoy3">
                                <canvas id="myChartMoy3"></canvas>
                            </div>
                            <div class="col-lg-6 appendCanvasMoy4">
                                <canvas id="myChartMoy4"></canvas>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset("js/Chart.min.js") }}"></script>
    <script>
        var dateFrom = null;
        var dateTo = null;
        var checkA = [];
        var checkB = [];
        // Evenement à déclencher si on clique sur le boutton de soumission
        $("#submitButton").click(function () {


            // A chaque fois que le bouton est cliqué,on doit vider le tableau
            checkB = [];
            var dateFrom = $("#fromDate").val();
            var dateTo = $("#toDate").val();
            var elmnts = $(".checkboxes");
            // On rempli le tableau des departements
            for(var i=0;i<elmnts.length;i++){
                var nodeElementId = elmnts[i].getAttribute("tag");
                checkA.push(nodeElementId);
            }
            // On vérifie si au moins un des départements a été coché
            var arLength = checkA.length;
            var oneChecked = false;
            var i=0;
            while((oneChecked == false) && (i<arLength)){
                var e = document.getElementById("checkbox"+checkA[i]);
                if(e.checked == true){
                    oneChecked = true;
                }
                i++;
            }
            // On reparcours le tableau pour voir quels sont les départements qui ont été cochés
            for(var i=0;i<elmnts.length;i++){
                var el = document.getElementById("checkbox"+checkA[i]);
                if(el.checked == true){
                    checkB.push(checkA[i]);
                }
            }
            console.log("Tableau final : "+checkB);

            // On fait un test pour afficher un message d'erreur
            if (oneChecked){
                if($("#depSelect").val()!=""){
                    if($("#empSelect").val()!=""){
                        if($("#fromDate").val()!=""){
                            if($("#toDate").val()!=""){
                                //alert("condition : "+(dateFrom == dateTo));
                                if(dateFrom < dateTo || dateFrom == dateTo){
                                    $('#modal_loading').modal('show');
                                    $("#errorContainer").hide();
                                    console.log(checkB);
                                    console.log(dateFrom);
                                    loadSelectedDepsData(checkB,dateFrom,dateTo);
                                    // Opérations sur les données des diagrammes
                                    // Affichage des diagrammes en fonction des données reçues

                                }else {
                                    $("#errorContainer").show();
                                    $("#errorContainer div span").text("Erreur : La date de début ne peut pas etre superieur à la date de fin");
                                    $("#containerMustBeHidden").attr("style","display:none");
                                }
                            }else {
                                $("#errorContainer").show();
                                $("#errorContainer div span").text("Erreur : veuillez choisir une date de fin valide");
                                $("#containerMustBeHidden").attr("style","display:none");
                            }
                        }else{
                            $("#errorContainer").show();
                            $("#errorContainer div span").text("Erreur : veuillez choisir une date de début valide");
                            $("#containerMustBeHidden").attr("style","display:none");
                        }
                    }else{
                        $("#errorContainer").show();
                        $("#errorContainer div span").text("Erreur : veuillez choisir un employé");
                        $("#containerMustBeHidden").attr("style","display:none");
                    }
                }else{
                    $("#errorContainer").show();
                    $("#errorContainer div span").text("Erreur : veuillez choisir un département");
                    $("#containerMustBeHidden").attr("style","display:none");
                }
            }else{
                $("#errorContainer").show();
                $("#errorContainer div span").text("Erreur : Veuillez sélectionner au moins un département");
            }
        });


        /* Création de la fonction de chargement des données de l'employé sélectionné */
        function loadSelectedDepsData(checkB,dateFrom,dateTo) {
            var abs = 0;

            // fonction d'ajout de date
            Date.prototype.addDays = function(days) {
                var dat = new Date(this.valueOf());
                dat.setDate(dat.getDate() + days);
                return dat;
            }

            function precisionRound(number, precision) {
                var factor = Math.pow(10, precision);
                return Math.round(number * factor) / factor;
            }

            // Intervalle de retard
            var interval = 60*60; // 10800 3Heures
            $.ajax({
                type: 'POST',
                url: "depStats",
                data: {'deps':checkB,'dateFrom':dateFrom,'dateTo':dateTo,'interval':interval},
                success: function (data) {
                    elLength = Object.keys(data).length;
                    $(".separationText").attr("style","display:block");
                    var labels = [];
                    var dataRetardTemps = [];
                    var dataRetardArgent = [];
                    var dataDepartTemps = [];
                    var dataDepartArgent = [];

                    var dataRetardTempsMoy = [];
                    var dataRetardArgentMoy = [];
                    var dataDepartTempsMoy = [];
                    var dataDepartArgentMoy = [];

                    for (var i=0;i<elLength;i++){
                        labels.push(data[i]["departement"]);
                        dataRetardTemps.push(precisionRound(data[i]["tpr"],3));
                        dataRetardArgent.push(precisionRound(data[i]["spr"],3));
                        dataDepartTemps.push(precisionRound(data[i]["tpd"],3));
                        dataDepartArgent.push(precisionRound(data[i]["spd"],3));

                        dataRetardTempsMoy.push(precisionRound(data[i]["tpr"]/data[i]["nbre"],3));
                        dataRetardArgentMoy.push(precisionRound(data[i]["spr"]/data[i]["nbre"],3));
                        dataDepartTempsMoy.push(precisionRound(data[i]["tpd"]/data[i]["nbre"],3));
                        dataDepartArgentMoy.push(precisionRound(data[i]["spd"]/data[i]["nbre"],3));
                    }
                    console.log(data);
                    console.log("Length of elements : "+data.length);
                    console.log("Labels : "+labels);

                    // Les diagrammes
                    $("#myChart").remove();
                    var element = "<canvas id='myChart'></canvas>";
                    $(".appendCanvas").append(element);
                    var ctx = document.getElementById('myChart').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux retards estimées en temps (Heure)",
                                backgroundColor: 'rgb(255, 99, 132)',
                                borderColor: 'rgb(255, 99, 132)',
                                data: dataRetardTemps,
                            }]
                        },
                    });

                    $("#myChart2").remove();
                    var element = "<canvas id='myChart2'></canvas>";
                    $(".appendCanvas2").append(element);
                    var ctx = document.getElementById('myChart2').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux retards estimées en argent (FCFA)",
                                backgroundColor: 'rgb(255, 99, 132)',
                                borderColor: 'rgb(255, 99, 132)',
                                data: dataRetardArgent,
                            }]
                        },
                    });

                    $("#myChart3").remove();
                    var element = "<canvas id='myChart3'></canvas>";
                    $(".appendCanvas3").append(element);
                    var ctx = document.getElementById('myChart3').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux départs estimées en temps (Heure)",
                                backgroundColor: 'skyblue',
                                borderColor: 'skyblue',
                                data: dataDepartTemps,
                            }]
                        },
                    });

                    $("#myChart4").remove();
                    var element = "<canvas id='myChart4'></canvas>";
                    $(".appendCanvas4").append(element);
                    var ctx = document.getElementById('myChart4').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux départs estimées en argent (FCFA)",
                                backgroundColor: 'skyblue',
                                borderColor: 'skyblue',
                                data: dataDepartArgent,
                            }]
                        },
                    });

                    // Les diagrammes de moyennes
                    $("#myChartMoy").remove();
                    var element = "<canvas id='myChartMoy'></canvas>";
                    $(".appendCanvasMoy").append(element);
                    var ctx = document.getElementById('myChartMoy').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux retards estimées en temps",
                                backgroundColor: 'rgb(255, 99, 132)',
                                borderColor: 'rgb(255, 99, 132)',
                                data: dataRetardTempsMoy,
                            }]
                        },
                    });

                    $("#myChartMoy2").remove();
                    var element = "<canvas id='myChartMoy2'></canvas>";
                    $(".appendCanvasMoy2").append(element);
                    var ctx = document.getElementById('myChartMoy2').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux retards estimées en argent(FCFA)",
                                backgroundColor: 'rgb(255, 99, 132)',
                                borderColor: 'rgb(255, 99, 132)',
                                data: dataRetardArgentMoy,
                            }]
                        },
                    });

                    $("#myChartMoy3").remove();
                    var element = "<canvas id='myChartMoy3'></canvas>";
                    $(".appendCanvasMoy3").append(element);
                    var ctx = document.getElementById('myChartMoy3').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux départs estimées en temps(Heure)",
                                backgroundColor: 'skyblue',
                                borderColor: 'skyblue',
                                data: dataDepartTempsMoy,
                            }]
                        },
                    });

                    $("#myChartMoy4").remove();
                    var element = "<canvas id='myChartMoy4'></canvas>";
                    $(".appendCanvasMoy4").append(element);
                    var ctx = document.getElementById('myChartMoy4').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Pertes dûes aux départs estimées en argent(FCFA)",
                                backgroundColor: 'skyblue',
                                borderColor: 'skyblue',
                                data: dataDepartArgent,
                            }]
                        },
                    });

                    // Closing the loading box
                    $('#modal_loading').modal('hide');
                },
                error: function (msg) {
                    // Closing the loading box
                    $('#modal_loading').modal('hide');
                    alert("Erreur :"+msg);
                }
            });
        }
    </script>
    <script>
        // On s'attaque aux collapsibles
        $(function () {
            $(".cl_DepStats").addClass("collapsible_element_active");
            $(".navigation_collapsible").collapsible('open',2);


            $('.datepicker').on('mousedown',function(event){
                event.preventDefault();
            });

        });
    </script>
{% endblock %}
